WITH CTE1 AS(
	SELECT
		EMP_ID,
    	DATEDIFF(SECOND, LOGIN, LOGOUT) / 3600.00 AS HOURS_WORKED
	FROM EMPLOYEES
),
CTE2 AS(
	SELECT EMP_ID,
  		COUNT(CASE WHEN HOURS_WORKED > 8 THEN 'WORKAHOLIC' END) AS MORE_T_8,
  		COUNT(CASE WHEN HOURS_WORKED > 10 THEN 'WORKAHOLIC' END) AS MORE_T_10
	FROM CTE1
  GROUP BY EMP_ID
),
CTE3 AS(
  	SELECT
  		EMP_ID,
  		CASE
  			WHEN MORE_T_8 >= 3 AND MORE_T_10 < 2 THEN '1'
  			WHEN MORE_T_8 < 3 AND MORE_T_10 >= 2 THEN '2'
  			WHEN MORE_T_8 >= 3 AND MORE_T_10 >= 2 THEN 'both'
 		END AS CRITERIAN
 	FROM CTE2
)
SELECT * FROM CTE3
ORDER BY EMP_ID ASC
;

--Optimized solution
WITH WorkStats AS (
    SELECT 
        EMP_ID,
        SUM(CASE WHEN DATEDIFF(SECOND, LOGIN, LOGOUT) / 3600.0 > 8  THEN 1 ELSE 0 END) AS MORE_T_8,
        SUM(CASE WHEN DATEDIFF(SECOND, LOGIN, LOGOUT) / 3600.0 > 10 THEN 1 ELSE 0 END) AS MORE_T_10
    FROM EMPLOYEES
    GROUP BY EMP_ID
)
SELECT 
    EMP_ID,
    CASE
        WHEN MORE_T_8 >= 3 AND MORE_T_10 < 2 THEN '1'
        WHEN MORE_T_8 < 3  AND MORE_T_10 >= 2 THEN '2'
        WHEN MORE_T_8 >= 3 AND MORE_T_10 >= 2 THEN 'both'
    END AS CRITERION
FROM WorkStats
WHERE 
    (MORE_T_8 >= 3 AND MORE_T_10 < 2)
 OR (MORE_T_8 < 3  AND MORE_T_10 >= 2)
 OR (MORE_T_8 >= 3 AND MORE_T_10 >= 2)   -- ensures only "workaholics"
ORDER BY EMP_ID;
